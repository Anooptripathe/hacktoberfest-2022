 int widthOfBinaryTree(TreeNode* root) {
        
        if(root==NULL)
            return 0;
        int ans=1;
        queue < pair <TreeNode*,int> > q;
        q.push( {root,0});
        long long p=0;
        while(!q.empty())
        {   
            
            int size=q.size();
            
            int start=q.front().second;
            int last=q.back().second;
            
            ans=max(ans,last-start+1);
            for(int i=0;i<size;i++)
            {
                root=q.front().first;
                p=q.front().second;
                q.pop();
                if(root->left!=NULL)
                    q.push( {root->left,p*2+1});
                if(root->right!=NULL)
                    q.push( {root->right,p*2+2});
                                
            }
        }
        return ans;
    }
